<!DOCTYPE html>
<html>
<head>
    <title>Vliegtuigherkenning</title>
</head>
<body>
    <div>Teachable Machine Image Model</div>
    <button type="button" onclick="init()">Start</button>
    <div id="webcam-container"></div>
    <div id="label-container"></div>

    <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@latest/dist/tf.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@teachablemachine/image@latest/dist/teachablemachine-image.min.js"></script>
    <script type="text/javascript">
        const URL = "./my_model/"; // Replace with the correct path to your model
        let model, webcam, labelContainer, maxPredictions;

        async function init() {
            const modelURL = URL + "model.json";
            const metadataURL = URL + "metadata.json";

            model = await tmImage.load(modelURL, metadataURL);
            maxPredictions = model.getTotalClasses();

            const flip = true;
            webcam = new tmImage.Webcam(200, 200, flip);
            await webcam.setup();
            await webcam.play();
            window.requestAnimationFrame(loop);

            document.getElementById("webcam-container").appendChild(webcam.canvas);
            labelContainer = document.getElementById("label-container");
            for (let i = 0; i < maxPredictions; i++) {
                labelContainer.appendChild(document.createElement("div"));
            }
        }

        async function loop() {
            webcam.update();
            await predict();
            window.requestAnimationFrame(loop);
        }

        async function predict() {
            const prediction = await model.predict(webcam.canvas);
            const topPredictions = Array.from(prediction)
                .map((p, i) => ({ className: p.className, probability: p.probability, index: i }))
                .sort((a, b) => b.probability - a.probability)
                .slice(0, 3);

            labelContainer.innerHTML = "";
            topPredictions.forEach(p => {
                const classPrediction = `${p.className}: ${p.probability.toFixed(2)}`;
                const div = document.createElement("div");
                div.textContent = classPrediction;
                labelContainer.appendChild(div);
            });
        }
    </script>
</body>
</html>
